<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://to016.github.io//</id><title>to^</title><subtitle>to^ blog, student at university of infomation and technology, VNU-HCM</subtitle> <updated>2022-05-11T09:56:37+07:00</updated> <author> <name>Tô Đỉnh Nguyên</name> <uri>https://to016.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://to016.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://to016.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Tô Đỉnh Nguyên </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Service worker và Man-in-the-Middle Attack</title><link href="https://to016.github.io//posts/SWandMITM/" rel="alternate" type="text/html" title="Service worker và Man-in-the-Middle Attack" /><published>2022-05-10T23:43:00+07:00</published> <updated>2022-05-10T23:43:00+07:00</updated> <id>https://to016.github.io//posts/SWandMITM/</id> <content src="https://to016.github.io//posts/SWandMITM/" /> <author> <name>to^</name> </author> <category term="WebSec" /> <category term="CTF" /> <summary> Service worker và Man-in-the-Middle Attack, để hiểu rõ được về chúng thì mình sẽ chia ra từng chủ để nhỏ và cuối cùng sẽ một challenge CTF từ năm 2021 để minh họa. Service worker (SW) là gì ? Hoàn cảnh ra đời Các trình duyệt web sử dụng Javascript như một ngôn ngữ để xử lí các đoạn code bên phía user, nếu html là khung sườn của trang web, css giúp tô điểm cho trang web thì JS góp phần làm ch... </summary> </entry> <entry><title>San Diego CTF 2022</title><link href="https://to016.github.io//posts/sandiegoctf2022/" rel="alternate" type="text/html" title="San Diego CTF 2022" /><published>2022-05-09T22:07:00+07:00</published> <updated>2022-05-09T23:13:12+07:00</updated> <id>https://to016.github.io//posts/sandiegoctf2022/</id> <content src="https://to016.github.io//posts/sandiegoctf2022/" /> <author> <name>to^</name> </author> <category term="WebSec" /> <category term="CTF" /> <summary> Sollution của 4 bài web. Apollo 1337 Bài này chỉ để làm quen với các tool nên coi hết video của họ là solve được sdctf{0ne_GiANT_L3AP_4_tH3_NeXT_gENERa7i0n} Lots of Logs Hướng đi của bài này là bruteforce các log file theo dạng https://logs.sdc.tf/logs/&amp;lt;year&amp;gt;/&amp;lt;month&amp;gt;/&amp;lt;date&amp;gt;/&amp;lt;weekday&amp;gt;.log script exploit: from datetime import datetime import requests TARGET = "... </summary> </entry> <entry><title>AngstromCTF 2022</title><link href="https://to016.github.io//posts/angstromctf2022/" rel="alternate" type="text/html" title="AngstromCTF 2022" /><published>2022-05-02T22:25:00+07:00</published> <updated>2022-05-07T04:39:59+07:00</updated> <id>https://to016.github.io//posts/angstromctf2022/</id> <content src="https://to016.github.io//posts/angstromctf2022/" /> <author> <name>to^</name> </author> <category term="WebSec" /> <category term="CTF" /> <summary> My solution for some web challenges in this competition The Flash Use DOM breakpoints in Chrome devtools, right click on p tag and chose Break on -&amp;gt; subtree modifications then step over to get flag actf{sp33dy_l1ke_th3_fl4sh} Auth Skip set cookie: user=admin actf{passwordless_authentication_is_the_new_hip_thing} crumbs exploit script: import requests import re TARGET = "... </summary> </entry> <entry><title>NahamconCTF 2022</title><link href="https://to016.github.io//posts/nahamconctf2022/" rel="alternate" type="text/html" title="NahamconCTF 2022" /><published>2022-05-01T01:10:00+07:00</published> <updated>2022-05-05T07:41:07+07:00</updated> <id>https://to016.github.io//posts/nahamconctf2022/</id> <content src="https://to016.github.io//posts/nahamconctf2022/" /> <author> <name>to^</name> </author> <category term="WebSec" /> <category term="CTF" /> <summary> Solution for some web challenges solved challenges EXtravagant Upload exp.xml and view it &amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt; &amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM "/var/www/flag.txt"&amp;gt; ]&amp;gt; &amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt; flag{639b72f2dd0017f454c44c3863c4e195} Jurassic Park access robots.txt Personnel exploit script: import requests import re TARGET = "http:... </summary> </entry> <entry><title>PHP POP Chain</title><link href="https://to016.github.io//posts/phpPopChain/" rel="alternate" type="text/html" title="PHP POP Chain" /><published>2022-04-22T22:27:00+07:00</published> <updated>2022-05-05T07:41:07+07:00</updated> <id>https://to016.github.io//posts/phpPopChain/</id> <content src="https://to016.github.io//posts/phpPopChain/" /> <author> <name>to^</name> </author> <category term="WebSec" /> <category term="CTF" /> <summary> Ở post này mình sẽ viết về cách khai thác PHP POP Chain mà mình học được qua các bài CTF. PHP POP Chain còn được gọi là Code Reuse Attack là một kĩ thuật hoạt động dựa trên việc sử dụng các đoạn code có sẵn (gadget) và liên kết (chain) chúng lại với nhau để làm thay đổi luồng thực thi của chương trình theo ý muốn của attacker. Thường thì kĩ thuật này sẽ được áp dụng khi một serialized object ... </summary> </entry> </feed>
